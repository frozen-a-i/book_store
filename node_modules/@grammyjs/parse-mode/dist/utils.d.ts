import type { MessageEntity } from "./deps.node.js";
import { FormattedString } from "./format.js";
interface CaptionEntities {
    caption?: FormattedString | string;
    caption_entities?: MessageEntity[];
}
interface ExplanationEntities {
    explanation?: FormattedString | string;
    explanation_entities?: MessageEntity[];
}
interface MediaEntities {
    media: CaptionEntities | CaptionEntities[];
}
interface MessageTextEntities {
    message_text: FormattedString | string;
    entities?: MessageEntity[];
}
interface TextEntities {
    text: FormattedString | string;
    entities?: MessageEntity[];
}
declare function isCaptionEntitiesPayload(method: string, _payload: unknown): _payload is CaptionEntities;
declare function isExplanationEntitiesPayload(method: string, _payload: unknown): _payload is ExplanationEntities;
declare function isMediaEntitiesPayload(method: string, _payload: unknown): _payload is MediaEntities;
declare function isTextEntitiesPayload(method: string, _payload: unknown): _payload is TextEntities;
declare function isCaptionEntitiesResult(result: {}): result is CaptionEntities;
declare function isMessageTextEntitiesContent(content: {}): content is MessageTextEntities;
export { isCaptionEntitiesPayload, isCaptionEntitiesResult, isExplanationEntitiesPayload, isMediaEntitiesPayload, isMessageTextEntitiesContent, isTextEntitiesPayload, };
